name: Build and Push Image

on:
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: make requirements development-requirements
    - name: Lint with flake8, pylint, and black
      run: make lint
    - name: Test with pytest
      run: pytest -v

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3.1.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Disply metadata
        run: |
          cat ${{steps.meta.outputs.bake-file }}

      # https://github.com/actions/upload-artifact
      - name: Archive metadata
        uses: actions/upload-artifact@v4.3.1
        with:
          name: metadata-${{ matrix.context }}.json
          path: ${{steps.meta.outputs.bake-file }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # PUSH THE CONTAINER IMAGE TO AWS ECR
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.SHA_SHORT }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::264318998405:role/GitHubAction-AssumeRoleWithAction
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Push to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2.0.1
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      - name: Push to AWS ECR
        run: |
          docker tag  ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SHORT_SHA }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SHORT_SHA }}
